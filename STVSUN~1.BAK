#include <stdio.h>

struct Student {
    int rollno;
    int m1;
    int m2;
    int m3;
    int total;
    float avg;
};

union StudentUnion {
    int rollno;
    int m1;
    int m2;
    int m3;
    int total;
    float avg;
};

int main() {
    // Structure part
    struct Student student1;

    // Union part
    union StudentUnion studentUnion;
    clrscr();
    printf("Enter roll number: ");
    scanf("%d", &student1.rollno);
    printf("Enter marks for subject 1: ");
    scanf("%d", &student1.m1);
    printf("Enter marks for subject 2: ");
    scanf("%d", &student1.m2);
    printf("Enter marks for subject 3: ");
    scanf("%d", &student1.m3);

    student1.total = student1.m1 + student1.m2 + student1.m3;
    student1.avg = student1.total / 3.0;

    printf("Total marks: %d\n", student1.total);
    printf("Average marks: %.2f\n", student1.avg);
    printf("Size of struct student1: %d bytes\n", sizeof(student1));


    // Note: This part demonstrates that union can only hold one value at a time
    studentUnion.rollno = student1.rollno;
    printf("Roll number from union: %d\n", studentUnion.rollno);

    studentUnion.m1 = student1.m1;
    printf("Marks for subject 1 from union: %d\n", studentUnion.m1);

    studentUnion.m2 = student1.m2;
    printf("Marks for subject 2 from union: %d\n", studentUnion.m2);

    studentUnion.m3 = student1.m3;
    printf("Marks for subject 3 from union: %d\n", studentUnion.m3);

    studentUnion.total = student1.total;
    printf("Total marks from union: %d\n", studentUnion.total);

    studentUnion.avg = student1.avg;
    printf("Average marks from union: %.2f\n", studentUnion.avg);

    printf("Size of union StudentUnion: %d bytes\n", sizeof(studentUnion));

    return 0;
}
